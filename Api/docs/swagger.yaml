basePath: /
definitions:
  main.AssignUserReq:
    properties:
      nazwa_kursu:
        type: string
      student_login:
        type: string
    required:
    - nazwa_kursu
    - student_login
    type: object
  main.Course:
    properties:
      id:
        type: integer
      nazwa:
        type: string
    type: object
  main.CreateAssignmentReq:
    properties:
      nazwa_kursu:
        type: string
      nazwa_zadania:
        type: string
      opis:
        type: string
      termin:
        description: YYYY-MM-DD
        type: string
    required:
    - nazwa_kursu
    - nazwa_zadania
    - opis
    - termin
    type: object
  main.CreateCourseReq:
    properties:
      nazwa:
        type: string
      wlasciciel_login:
        type: string
    required:
    - nazwa
    - wlasciciel_login
    type: object
  main.DeleteAssignmentReq:
    properties:
      nazwa_kursu:
        type: string
      nazwa_zadania:
        type: string
    required:
    - nazwa_kursu
    - nazwa_zadania
    type: object
  main.DeleteCourseReq:
    properties:
      nazwa:
        type: string
    required:
    - nazwa
    type: object
  main.LoginReq:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  main.RegisterReq:
    properties:
      email:
        type: string
      imie:
        type: string
      klasa:
        type: string
      nazwisko:
        type: string
      password:
        type: string
      role:
        type: string
    required:
    - email
    - imie
    - nazwisko
    - password
    - role
    type: object
  main.RemoveUserReq:
    properties:
      nazwa_kursu:
        type: string
      student_login:
        type: string
    required:
    - nazwa_kursu
    - student_login
    type: object
  main.RenameCourseReq:
    properties:
      nowa_nazwa:
        type: string
      stara_nazwa:
        type: string
    required:
    - nowa_nazwa
    - stara_nazwa
    type: object
  main.RescheduleAssignmentReq:
    properties:
      nazwa_kursu:
        type: string
      nazwa_zadania:
        type: string
      nowy_termin:
        description: YYYY-MM-DD
        type: string
    required:
    - nazwa_kursu
    - nazwa_zadania
    - nowy_termin
    type: object
  main.ScriptResponse:
    properties:
      error:
        type: string
      output:
        type: string
    type: object
  main.StudentCourse:
    properties:
      id:
        type: integer
      nazwa:
        type: string
      wlasciciel:
        type: integer
    type: object
  main.StudentInfo:
    properties:
      email:
        type: string
      id:
        type: integer
      imie:
        type: string
      klasa:
        type: string
      nazwisko:
        type: string
    type: object
  main.Task:
    properties:
      id:
        type: integer
      kurs_id:
        type: integer
      nazwa:
        type: string
      opis:
        type: string
      termin_realizacji:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API server for managing courses and assignments.
  title: Course System Backend
  version: "1.0"
paths:
  /all:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: List all tables
      tags:
      - ListAll
  /kurs:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Delete course
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/main.DeleteCourseReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ScriptResponse'
      security:
      - BearerAuth: []
      summary: Delete course
      tags:
      - CourseAction
    post:
      consumes:
      - application/json
      parameters:
      - description: Create course request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/main.CreateCourseReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ScriptResponse'
      security:
      - BearerAuth: []
      summary: Create course
      tags:
      - CourseAction
    put:
      consumes:
      - application/json
      parameters:
      - description: Rename course
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/main.RenameCourseReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ScriptResponse'
      security:
      - BearerAuth: []
      summary: Rename course
      tags:
      - CourseAction
  /kurs/assign:
    post:
      consumes:
      - application/json
      parameters:
      - description: Assign user
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/main.AssignUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ScriptResponse'
      security:
      - BearerAuth: []
      summary: Assign user to course
      tags:
      - CourseAction
  /kurs/remove:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Remove user
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/main.RemoveUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ScriptResponse'
      security:
      - BearerAuth: []
      summary: Remove user from course
      tags:
      - CourseAction
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login user
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/main.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - Registry
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register user
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/main.RegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ScriptResponse'
      summary: Register user
      tags:
      - Registry
  /specialtreatment/allstudents:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.StudentInfo'
            type: array
      security:
      - BearerAuth: []
      summary: Get all students
      tags:
      - SpecialTreatment
  /specialtreatment/creator:
    get:
      consumes:
      - application/json
      parameters:
      - description: Teacher login (email)
        in: query
        name: login
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Course'
            type: array
      security:
      - BearerAuth: []
      summary: Get courses created by a teacher
      tags:
      - SpecialTreatment
  /specialtreatment/infotask:
    get:
      consumes:
      - application/json
      parameters:
      - description: Task ID
        in: query
        name: zadanie_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Task'
      security:
      - BearerAuth: []
      summary: Get info about a specific task
      tags:
      - SpecialTreatment
  /specialtreatment/kursstudents:
    get:
      consumes:
      - application/json
      parameters:
      - description: Course ID
        in: query
        name: kurs_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.StudentInfo'
            type: array
      security:
      - BearerAuth: []
      summary: Get students enrolled in a specific course
      tags:
      - SpecialTreatment
  /specialtreatment/studentcourses:
    get:
      consumes:
      - application/json
      parameters:
      - description: Student login (email)
        in: query
        name: login
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.StudentCourse'
            type: array
      security:
      - BearerAuth: []
      summary: Get courses for a specific student by login
      tags:
      - SpecialTreatment
  /specialtreatment/tasks:
    get:
      consumes:
      - application/json
      parameters:
      - description: Course ID
        in: query
        name: kurs_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Task'
            type: array
      security:
      - BearerAuth: []
      summary: Get tasks for a specific course
      tags:
      - SpecialTreatment
  /whoami:
    get:
      consumes:
      - application/json
      parameters:
      - description: User login
        in: query
        name: login
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ScriptResponse'
      security:
      - BearerAuth: []
      summary: Who am I
      tags:
      - GetInfo
  /zadanie:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Delete assingment
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/main.DeleteAssignmentReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ScriptResponse'
      security:
      - BearerAuth: []
      summary: Delete assignment
      tags:
      - AssingmentAction
    post:
      consumes:
      - application/json
      parameters:
      - description: Create course assingment
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/main.CreateAssignmentReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ScriptResponse'
      security:
      - BearerAuth: []
      summary: Create assignment
      tags:
      - AssingmentAction
    put:
      consumes:
      - application/json
      parameters:
      - description: Reschedule assingment
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/main.RescheduleAssignmentReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ScriptResponse'
      security:
      - BearerAuth: []
      summary: Reschedule assignment
      tags:
      - AssingmentAction
  /zadanie/check:
    get:
      consumes:
      - application/json
      parameters:
      - description: Student login
        in: query
        name: student_login
        required: true
        type: string
      - description: Course name
        in: query
        name: nazwa_kursu
        required: true
        type: string
      - description: Assignment name
        in: query
        name: nazwa_zadania
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ScriptResponse'
      security:
      - BearerAuth: []
      summary: Check submission
      tags:
      - AssingmentAction
  /zadanie/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Student login
        in: formData
        name: student_login
        required: true
        type: string
      - description: Course name
        in: formData
        name: nazwa_kursu
        required: true
        type: string
      - description: Assignment name
        in: formData
        name: nazwa_zadania
        required: true
        type: string
      - description: Assignment file
        in: formData
        name: plik
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ScriptResponse'
      security:
      - BearerAuth: []
      summary: Submit assignment
      tags:
      - AssingmentAction
securityDefinitions:
  BearerAuth:
    description: 'Enter your JWT token as: Bearer <token>'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
